#!/bin/bash

# Start all services in the correct order
docker network create demo-network

# run the cloud sql proxy docker container
/usr/bin/docker run --name cloudsql-proxy --detach --restart always \
        --network demo-network \
        -p ${cloud_sql_proxy_port}:${cloud_sql_proxy_port} \
        ${cloud_sql_proxy_image} ${cloud_sql_instance_name} ${cloud_sql_replica_name} --address 0.0.0.0 --private-ip

# run the pgbouncer docker container
/usr/bin/docker run \
        --name pgbouncer \
        --restart always \
        --detach \
        --network demo-network \
        -p ${listen_port}:${listen_port} \
        -v /run/user/userlist.txt:/etc/pgbouncer/userlist.txt:ro \
        -v /run/user/pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini:ro \
        ${image}

# run the hammerdb docker container
/usr/bin/docker run -d --name hammerdb \
        --network demo-network \
        -v /run/user/configure-hammerdb.sh:/home/hammerdb/HammerDB-4.7/configure-hammerdb.sh \
        -v /run/user/configure-hammerdb.tcl:/home/hammerdb/HammerDB-4.7/configure-hammerdb.tcl \
        -v /run/user/run_workload.tcl:/home/hammerdb/HammerDB-4.7/run_workload.tcl \
        -v /run/user/run_workload.sh:/home/hammerdb/HammerDB-4.7/run_workload.sh \
        tpcorg/hammerdb:postgres  
/usr/bin/docker exec -t hammerdb /bin/bash -c "bash /home/hammerdb/HammerDB-4.7/configure-hammerdb.sh"